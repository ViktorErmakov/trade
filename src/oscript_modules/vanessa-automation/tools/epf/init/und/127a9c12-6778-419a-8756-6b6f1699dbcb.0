{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"&НаКлиенте
Функция ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров, ИмяПараметра)
	Если СтруктураПараметров.Свойство(ИмяПараметра) Тогда
		Возврат СтруктураПараметров[ИмяПараметра];
	Иначе	
		Возврат Неопределено;
	КонецЕсли;	 
КонецФункции	

&НаСервере 
Функция ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,VBParamsДвоичныеДанные)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	ПараметрыУФ            = Новый Структура;
	ПараметрыУФ.Вставить(""VBParamsДвоичныеДанные"",VBParamsДвоичныеДанные);
	
	Рез = ОбъектСервер.ПрочитатьСтруктуруИзJSONФайла(VBParams,ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции	


&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Функция ВыполнитьКомандуОСБезПоказаЧерногоОкна(ТекстКоманды, ЖдатьОкончания = -1) Экспорт
	
	//если ЖдатьОкончания = -1, тогда будет ожидания окончания работы приложения
	ИмяВременногоФайлаКоманды = ПолучитьИмяВременногоФайла(""bat"");
	// 
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.ANSI, , Ложь); 
	ЗТ.Закрыть();
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.UTF8, , Истина); 
	ЗТ.ЗаписатьСтроку(""chcp 65001""); 
	ЗТ.ЗаписатьСтроку(ТекстКоманды); 
	ЗТ.Закрыть();
	
	WshShell	= Новый COMОбъект(""WScript.Shell"");
	Рез			= WshShell.Run("""""""" + ИмяВременногоФайлаКоманды + """""""", 0, ЖдатьОкончания);
	WshShell	= Неопределено;
	
	Возврат Рез;
	
КонецФункции	

&НаКлиенте
Функция ПреобразоватьПутьСТочкамиКНормальномуПути(ОригСтр)
	ИмяВременногоФайлаЛог     = ПолучитьИмяВременногоФайла(""txt"");
	
	Команда = ""@echo on
				|for %%f in ( """""" + ОригСтр + """""" ) do set fullname=%%~ff
				|echo %fullname% > "" + ИмяВременногоФайлаЛог;
				
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
	
	Рез = ОригСтр;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяВременногоФайлаЛог,""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если СокрЛП(Стр) = """" Тогда
			Продолжить;
		КонецЕсли;	 
		
		
		Рез = СокрЛП(Стр);
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Рез;
	
КонецФункции	

&НаКлиенте
Процедура ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров)
	МассивКлючей = Новый Массив;
	
	Для каждого ПараметрБилда Из СтруктураПараметров Цикл
		Если Лев(ПараметрБилда.Значение,1) = ""."" Тогда
			МассивКлючей.Добавить(ПараметрБилда.Ключ);
		КонецЕсли;	 
	КонецЦикла;
	
	Для каждого Ключ Из МассивКлючей Цикл
		Было  = СтруктураПараметров[Ключ];
		Стало = ПреобразоватьПутьСТочкамиКНормальномуПути(СтруктураПараметров[Ключ]);
		ТекстСообщения = ""Было=%1, Стало=%2"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Было);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Стало);
		Сообщить(ТекстСообщения);
		
		СтруктураПараметров.Вставить(Ключ,Стало);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметров(Стр)
	Результат = Новый Структура;
	
	Массив = РазложитьСтрокуВМассивПодстрок(Стр,"";"");
	Для каждого Элем Из Массив Цикл
		Поз = Найти(Элем,""="");
		Если Поз > 0 Тогда
			Ключ     = Лев(Элем,Поз-1);
			Значение = Сред(Элем,Поз+1);
			Попытка
				Результат.Вставить(Ключ,Значение);
			Исключение
				ТекстСообщения = ""Не смог получить значение из строки запуска: %1"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Ключ);
				Сообщить(ТекстСообщения);
			КонецПопытки;
		Иначе
			Если НЕ ПустаяСтрока(Элем) Тогда 
				Попытка
					Результат.Вставить(Элем,Истина);
				Исключение
					ТекстСообщения = ""Не смог получить значение из строки запуска: %1"";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Элем);
					Сообщить(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Результат;
КонецФункции	

&НаСервереБезКонтекста
Процедура УстановитьКонстаты(Стр)
	Константы.ПутьКVanessaAutomation.Установить(Стр);
	//Константы.СлужебныйСчетчик.Установить(0);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОкно1С()
	ЗавершитьРаботуСистемы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	
	Если СтрЗапуска = """" Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(СтрЗапуска);
	ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров);
	
	VBParams = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""VBParams"");
	
	
	//Предупреждение(""VBParams=""+VBParams);
	
	VBParamsДвоичныеДанные = Новый ДвоичныеДанные(VBParams);
	ПараметрыФайла = ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,VBParamsДвоичныеДанные);
	ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(ПараметрыФайла);
	
	УстановитьКонстаты(ПараметрыФайла.ПутьКVanessaAutomation);
	
	//Отказ = Истина;
	ЗавершитьРаботуСистемы(Ложь);
	
	//ПодключитьОбработчикОжидания(""ЗакрытьОкно1С"",1,Истина);
КонецПроцедуры

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",fddfa2b8-7cfc-48c5-8603-eabe1376e55f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}