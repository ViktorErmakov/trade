{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{34,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{11,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},3,3,0},"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"//начало текста модуля
&НаКлиенте
Перем Ванесса;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСоздалСлужебныйФайлВОтноситекльномКаталогеСИменем(Парам01,Парам02)"",""ЯСоздалСлужебныйФайлВОтноситекльномКаталогеСИменем"",""И я создал служебный файл в относитекльном каталоге """"features\Core"""" с именем """"TestFile"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗагрузилФичиИзОтносительногоКаталога(Парам01)"",""ЯЗагрузилФичиИзОтносительногоКаталога"",""И я загрузил фичи из относительного каталога """"features\Core\ExpectedSomething"""""","""","""");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	Попытка
		Если Контекст.Свойство(""ОткрытаяФормаVanessaBehavoir"") Тогда
			ОткрытаяФормаVanessaBehavoir = Контекст.ОткрытаяФормаVanessaBehavoir;
			ОткрытаяФормаVanessaBehavoir.Закрыть();
		КонецЕсли;	 
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьСлужебныйФайл()
	ЗТ = Новый ЗаписьТекста(Контекст.ИмяСлужебногоФайла,""UTF-8"",,Истина); 
	ЗТ.ЗаписатьСтроку(""""); 
	ЗТ.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУдалениеФайлов(ДополнительныеПараметры) Экспорт
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаКлиенте
//я создал служебный файл в относитекльном каталоге ""features\Core"" с именем ""TestFile""
//@ЯСоздалСлужебныйФайлВОтноситекльномКаталогеСИменем(Парам01,Парам02)
Процедура ЯСоздалСлужебныйФайлВОтноситекльномКаталогеСИменем(ОтносительныйКаталог,ИмяФайла) Экспорт
	ИмяСлужебногоФайла = Ванесса.Объект.КаталогИнструментов + ""\"" + ОтносительныйКаталог + ""\"" + ИмяФайла;
	Контекст.Вставить(""ИмяСлужебногоФайла"",ИмяСлужебногоФайла);
	
	Если НЕ Ванесса.ЕстьПоддержкаАсинхронныхВызовов Тогда
		УдалитьФайлы(ИмяСлужебногоФайла);
		ЗаписатьСлужебныйФайл();
	Иначе
		ХостФорма = Ванесса;
		ХостФорма.ЗапретитьВыполнениеШагов();
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьУдалениеФайлов"""", ЭтаФорма)"");
		Выполнить(""НачатьУдалениеФайлов(ОписаниеОповещения,ИмяСлужебногоФайла)"");
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ЯЗагрузилФичиИзОтносительногоКаталогаТаймер()
	КолСекундТаймер = КолСекундТаймер + 1;
	Если КолСекундТаймер > МаскКолСекундТаймер Тогда
		ОтключитьОбработчикОжидания(""ЯЗагрузилФичиИзОтносительногоКаталогаТаймер"");
		Ванесса.ПродолжитьВыполнениеШагов(Истина,""Не получилось дождаться загрузки сценариев в Vanessa Automation."");
		Возврат;
	КонецЕсли;	 
	
	Если Контекст.ОткрытаяФормаVanessaBehavoir.ФлагСценарииЗагружены Тогда
		ОтключитьОбработчикОжидания(""ЯЗагрузилФичиИзОтносительногоКаталогаТаймер"");
		ЯЗагрузилФичиИзОтносительногоКаталогаПродолжение();
		Возврат;
	КонецЕсли;	 
КонецПроцедуры 

&НаКлиенте
Процедура ЯЗагрузилФичиИзОтносительногоКаталогаПродолжение()
	ИмяСлужебногоФайла = Контекст.ИмяСлужебногоФайла;
	ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьУдалениеФайлов"""", ЭтаФорма)"");
	Выполнить(""НачатьУдалениеФайлов(ОписаниеОповещения,ИмяСлужебногоФайла)"");
КонецПроцедуры

&НаКлиенте
//я загрузил фичи из относительного каталога ""features\Core""
//@ЯЗагрузилФичиИзОтносительногоКаталога(Парам01)
Процедура ЯЗагрузилФичиИзОтносительногоКаталога(ОтносительныйКаталог) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	Контекст.ОткрытаяФормаVanessaBehavoir.Объект.КаталогФич = Ванесса.Объект.КаталогИнструментов + ""\"" + ОтносительныйКаталог;
	Контекст.ОткрытаяФормаVanessaBehavoir.ЗагрузитьФичи();
	МаскКолСекундТаймер = 30;
	КолСекундТаймер = 0;
	ПодключитьОбработчикОжидания(""ЯЗагрузилФичиИзОтносительногоКаталогаТаймер"",1,Ложь);
КонецПроцедуры


//окончание текста модуля
",
{4,5,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Контекст",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"КонтекстСохраняемый",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"КолСекундТаймер",
{1,1,
{"ru","Кол секунд таймер"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"МаскКолСекундТаймер",
{1,1,
{"ru","Маск кол секунд таймер"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}