{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(Парам01)"",""ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson"",""И в каталоге файлов ошибок в json формате появился 1 файл json"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВКаталогеСкриншотовПоявилосьФайла(Парам01)"",""ВКаталогеСкриншотовПоявилосьФайла"",""И в каталоге скриншотов появилось 2 файла"","""","""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И в каталоге файлов ошибок в json формате появился 1 файл json
//@ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(Парам01)
Процедура ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(ДолжноБытьФайлов) Экспорт
	КолФайлов = 0;
	БылФайлJson = Ложь;
	
	МасссивНайденныхФайлов = Новый Массив;
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(Контекст.КаталогОшибок,СписокКаталогов,СписокФайлов,Истина);
	Для Каждого ЭлемФайл Из СписокФайлов Цикл
		ПолноеИмя = ЭлемФайл.Значение.ПолноеИмя;
		МасссивНайденныхФайлов.Добавить(ПолноеИмя);
		
		Контекст.Вставить(""НайденноеИмяОшибкиJson"",ПолноеИмя);
		
		Если Найти(НРег(ПолноеИмя),"".json"") > 0 Тогда
			БылФайлJson = Истина;
			КолФайлов = КолФайлов + 1;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если Не БылФайлJson Тогда
		ТекстСообщения = ""В каталоге %1 не найдено ни одного файла json."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Контекст.КаталогОшибок);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Если КолФайлов <> ДолжноБытьФайлов Тогда
		ТекстСообщения = ""Найдено %1, а должно быть %2 файлов json."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",КолФайлов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ДолжноБытьФайлов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Контекст.Вставить(""МасссивНайденныхФайлов"",МасссивНайденныхФайлов);
КонецПроцедуры

&НаКлиенте
//И в каталоге скриншотов появилось 2 файла
//@ВКаталогеСкриншотовПоявилосьФайла(Парам01)
Процедура ВКаталогеСкриншотовПоявилосьФайла(ДолжноБытьФайлов) Экспорт
	КолФайлов = 0;
	БылФайл = Ложь;
	
	МасссивНайденныхФайлов = Новый Массив;
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(Контекст.КаталогВыгрузкиСкриншотов,СписокКаталогов,СписокФайлов,Истина);
	Для Каждого ЭлемФайл Из СписокФайлов Цикл
		ПолноеИмя = ЭлемФайл.Значение.ПолноеИмя;
		МасссивНайденныхФайлов.Добавить(ПолноеИмя);
		
		Контекст.Вставить(""НайденноеИмяОшибкиJson"",ПолноеИмя);
		
		Если Найти(НРег(ПолноеИмя),"".png"") > 0 Тогда
			БылФайл = Истина;
			КолФайлов = КолФайлов + 1;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если Не БылФайл Тогда
		ТекстСообщения = ""В каталоге %1 не найдено ни одного файла скриншотов."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Контекст.КаталогВыгрузкиСкриншотов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Если КолФайлов <> ДолжноБытьФайлов Тогда
		ТекстСообщения = ""Найдено %1, а должно быть %2 файлов скриншотов."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",КолФайлов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ДолжноБытьФайлов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Контекст.Вставить(""МасссивНайденныхФайлов"",МасссивНайденныхФайлов);
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",503de865-4645-4496-b5dd-2e4a76236095}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}