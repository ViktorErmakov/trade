{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		""ПараметрРавен(Парам01,Парам02)"",
		""ПараметрРавен"",""Тогда Параметр """"ВыполнятьЗамер"""" равен """"Ложь"""""",
		"""",
		"""");
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		""ПараметрУстановленВЗначение(Парам01,Парам02)"",
		""ПараметрУстановленВЗначение"",
		""Допустим Параметр """"АдресОтладчика"""" установлен в значение """"http://localhost:1550"""""",
		"""",
		"""");
		
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		""ПараметрНеСуществует(Парам01)"",
		""ПараметрНеСуществует"",
		""Допустим Параметр """"ДополнительныеПараметры.ВыполнятьЗамер"""" не существует"",
		"""",
		"""");

	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		""ЯОчищаюПараметры()"",
		""ЯОчищаюПараметры"",
		""И Я очищаю параметры"",
		"""",
		"""");


		
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////
// Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И Параметр """"ВыполнятьЗамер"""" не существует
//@ПараметрНеСуществует(Парам01)
Функция ПараметрНеСуществует(ИмяПараметра) Экспорт

	Попытка
		Значение = ЗначениеПараметра(ИмяПараметра);
		ВызватьИсключение ""Пробросим в исключение"";	
	Исключение	
		Если Найти(ОписаниеОшибки(), ""не обнаружено"") = 0 Тогда 
			ВызватьИсключение ""Ожидалось, что параметра нет"";				
		КонецЕсли;	
	КонецПопытки;	
	
КонецФункции


&НаКлиенте
//И Я Удаляю Параметры
//@ЯОчищаюПараметры()
Функция ЯОчищаюПараметры() Экспорт
	
	Ванесса.Объект.ДополнительныеПараметры.Удалить(""ВыполнятьЗамер"");	

КонецФункции



&НаКлиенте
//Тогда Параметр ""ВыполнятьЗамер"" равен ""Ложь""
//@ПараметрРавен(Парам01,Парам02)
Функция ПараметрРавен(ИмяПараметра, ОжидаемоеЗначение) Экспорт
	
	ЗначениеПараметра = ЗначениеПараметра(ИмяПараметра);
	
	Если НЕ Строка(ЗначениеПараметра) = ОжидаемоеЗначение Тогда
		ВызватьИсключение ""Параметр не равен значению"";
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
//Допустим Параметр ""АдресОтладчика"" установлен в значение ""http://localhost:1550""
//@ПараметрУстановленВЗначение(Парам01,Парам02)
Функция ПараметрУстановленВЗначение(ИмяПараметра, УстанавливаемоеЗначение) Экспорт

	Выполнить(""Ванесса.Объект"" + ЦепочкаПараметоров(ИмяПараметра) + "" = УстанавливаемоеЗначение"" );

КонецФункции


&НаКлиенте
Функция ЗначениеПараметра(ИмяПараметра)
	
	Возврат Вычислить(""Ванесса.Объект"" + ЦепочкаПараметоров(ИмяПараметра));
	
КонецФункции

&НаКлиенте
Функция ЦепочкаПараметоров(ИмяПараметра)
	
	ЦепочкаПараметоров = """";
	
	ПараметрыОбъекта = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(ИмяПараметра, ""."");
	
	Для Каждого ПараметрБезТочки Из ПараметрыОбъекта Цикл 
		ЦепочкаПараметоров = ЦепочкаПараметоров + ""["""""" + ПараметрБезТочки + """"""]"";
	КонецЦикла;	
	
	Возврат ЦепочкаПараметоров;
	
КонецФункции	
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",503de865-4645-4496-b5dd-2e4a76236095}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}