{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВОткрытойФормеВПолеЯВвожуКомандуДляIrfanView(Парам01)"",""ВОткрытойФормеВПолеЯВвожуКомандуДляIrfanView"",""И     В открытой форме в поле """"Команда создания скриншотов"""" я ввожу команду для IrfanView"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеЯВвожуЗначениеИзTestManager(Парам01,Парам02)"",""ВПолеЯВвожуЗначениеИзTestManager"",""И     в поле """"Экран ширина"""" я ввожу значение из TestManager """"ЗаписьВидеоЭкранШирина"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯИзменяюФлагВСоответствииСоЗначениемTestManager(Парам01,Парам02)"",""ЯИзменяюФлагВСоответствииСоЗначениемTestManager"",""И     я изменяю флаг """"Подсвечивать активные элементы форм"""" в соответствии со значением TestManager """"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеПутьКСловарюЗаменЯВвожуЗначениеИзTestManager(Парам01)"",""ВПолеПутьКСловарюЗаменЯВвожуЗначениеИзTestManager"",""И     в поле Путь к словарю замен я ввожу значение из TestManager """"ЗаписьВидеоСловарьЗамен"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеКаталогСкриншотовЯУказываюПутьКОтносительномуКаталогу(Парам01)"",""ВПолеКаталогСкриншотовЯУказываюПутьКОтносительномуКаталогу"",""И     в поле каталог скриншотов я указываю путь к относительному каталогу """"tools\ScreenShots"""""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И     в поле ""Экран ширина"" я ввожу значение из TestManager ""ЗаписьВидеоЭкранШирина""
//@ВПолеЯВвожуЗначениеИзTestManager(Парам01,Парам02)
Процедура ВПолеЯВвожуЗначениеИзTestManager(ИмяРеквизита,ИмяЗначения) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Поле = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,Ложь);
	Поле.ВвестиТекст(XMLСтрока(Ванесса.Объект[ИмяЗначения]));
	
	//Ванесса.Шаг(""И в поле """""" + ИмяРеквизита + """""" я ввожу текст '"" + XMLСтрока(Ванесса.Объект[ИмяЗначения]) + ""'"");
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//И     я изменяю флаг ""Подсвечивать активные элементы форм"" в соответствии со значением TestManager ""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм""
//@ЯИзменяюФлагВСоответствииСоЗначениемTestManager(Парам01,Парам02)
Процедура ЯИзменяюФлагВСоответствииСоЗначениемTestManager(ИмяРеквизита,ИмяЗначения) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если Ванесса.Объект[ИмяЗначения] Тогда
		Ванесса.Шаг(""И     я изменяю флаг """""" + ИмяРеквизита + """""""");
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в поле Путь к словарю замен я ввожу значение из TestManager ""ЗаписьВидеоСловарьЗамен""
//@ВПолеПутьКСловарюЗаменЯВвожуЗначениеИзTestManager(Парам01)
Процедура ВПолеПутьКСловарюЗаменЯВвожуЗначениеИзTestManager(Парам01) Экспорт
	ЗаписьВидеоСловарьЗамен =  Ванесса.Объект.ЗаписьВидеоСловарьЗамен; //это список значений
	
	
	Для Каждого Элем Из ЗаписьВидеоСловарьЗамен Цикл
		Ванесса.Шаг(""И я буду выбирать внешний файл """""" + Элем.Значение + """""""");
		Ванесса.Шаг(""И в таблице """"ЗаписьВидеоСловарьЗамен"""" я нажимаю на кнопку """"Добавить"""""");
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
//И     в поле каталог скриншотов я указываю путь к относительному каталогу ""tools\ScreenShots""
//@ВПолеКаталогСкриншотовЯУказываюПутьКОтносительномуКаталогу(Парам01)
Процедура ВПолеКаталогСкриншотовЯУказываюПутьКОтносительномуКаталогу(ЧастьПути) Экспорт
	Каталог = Ванесса.Объект.КаталогИнструментов + ""\"" + ЧастьПути;
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
	Иначе
		Ванесса.УдалитьКаталогКомандаСистемы(Каталог);
		Ванесса.Sleep(1);
		Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
	КонецЕсли;	 
	
	Контекст.Вставить(""КаталогСкриншотов"",Каталог);
	Ванесса.Шаг(""И В открытой форме в поле с именем """"КаталогВыгрузкиСкриншотов"""" я ввожу текст """""" + Каталог + """""""");
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в поле ""Команда создания скриншотов"" я ввожу команду для IrfanView
//@ВОткрытойФормеВПолеЯВвожуКомандуДляIrfanView(Парам01)
Процедура ВОткрытойФормеВПолеЯВвожуКомандуДляIrfanView(ИмяПоля) Экспорт
	ПутьКExe = ""C:\Program Files (x86)\IrfanView\i_view32.exe"";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПутьКExe) Тогда
		ПутьКExe = ""C:\Program Files\IrfanView\i_view32.exe"";
	КонецЕсли;	 
	
	Поле = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(""Команда создания скриншотов"",Ложь);
	Поле.ВвестиТекст("""""""" + ПутьКExe + """""" /capture=1 /convert="");
КонецПроцедуры

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}